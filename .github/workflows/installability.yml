name: Installability

# Disabled this test for windows due to:
#
# FileTracker : error FTK1011: could not create the new file tracking log [C:\Users\runneradmin\.hunter\_Base\69e4a05\0e2d5bb\1dae5df\Build\outcome\Build\outcome-Release.vcxproj]
#    file:
#    C:\Users\runneradmin\.hunter\_Base\69e4a05\0e2d5bb\1dae5df\Build\outcome\Build\outcome-Release-prefix\src\outcome-Release-build\quickcpplib\repo\src\quickcpplib-build\CMakeFiles\CMakeScratch\TryCompile-0na0g7\cmTC_0898c.dir\Debug\cmTC_0898c.tlog\CL.read.1.tlog.
#
# ... which is 261 characters long. Basically it looks like github actions turned off long path support, and I couldn't be arsed jigging with this to work around that.

on:
  push:
    branches:
    - develop
    - master
  pull_request:
  schedule:
  - cron: '0 0 1 * *'

jobs:
  installability:
    name: "Installability"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]  # windows-2022
        configuration: [error_code, status_code]
    env:
      NAME: Install-${{ matrix.os }}-${{ matrix.configuration }}
    runs-on: ${{ matrix.os }}
          
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install
      shell: bash
      run: |
       git config --global core.longpaths true
       if [ "${{ matrix.os }}" = "ubuntu-18.04" ]; then
         sudo apt-get remove -y libssl-dev
         sudo apt-get autoremove
       fi
       if [ "${{ matrix.configuration }}" = "status_code" ]; then
         export CMAKE_CONFIGURE_OPTIONS="-DLLFIO_USE_EXPERIMENTAL_SG14_STATUS_CODE=ON"
       fi
       git clone --depth 1 https://github.com/ned14/quickcpplib.git
       pip install --user gitpython
       python quickcpplib/scripts/test_cpp-pm_install.py test-packaging/example.cpp quickcpplib quickcpplib::hl https://github.com/ned14/quickcpplib master "" outcome outcome::hl https://github.com/ned14/outcome master "" llfio llfio::sl https://github.com/ned14/llfio develop "$CMAKE_CONFIGURE_OPTIONS"
       cd test_cpp-pm_install
       cat cmake/Hunter/config.cmake
       cat CMakeLists.txt
       mkdir build
       cd build
       cmake .. -DCMAKE_BUILD_TYPE=Release
       cmake --build .
